# https://moonrepo.dev/docs/config/toolchain
$schema: "https://moonrepo.dev/schemas/toolchain.json"

# Extend and inherit an external configuration file. Must be a valid HTTPS URL or file system path.
# extends: './shared/toolchain.yml'

# Configures Node.js within the toolchain. moon manages its own version of Node.js
# instead of relying on a version found on the host machine. This ensures deterministic
# and reproducible builds across any machine.
node:
  # The version to use. Must be a semantic version that includes major, minor, and patch.
  # We suggest using the latest active LTS version: https://nodejs.org/en/about/releases
  version: "^20.0.0"

  # The package manager to use when managing dependencies.
  # Accepts "npm" (default), "pnpm", or "yarn".
  packageManager: "pnpm"

  # The version of the package manager (above) to use.
  pnpm:
    version: "8.15.1"

  # Add `node.version` as a constraint in the root `package.json` `engines`.
  addEnginesConstraint: true

  # Dedupe dependencies after the lockfile has changed.
  dedupeOnLockfileChange: true

  # Version format to use when syncing dependencies within the project's `package.json`.
  # dependencyVersionFormat: 'workspace'

  # Infer and automatically create moon tasks from `package.json` scripts, per project.
  # BEWARE: Tasks and scripts are not 1:1 in functionality, so please refer to the documentation.
  inferTasksFromScripts: true

  # Sync a project's `dependsOn` as dependencies within the project's `package.json`.
  syncProjectWorkspaceDependencies: true

  # Sync `node.version` to a 3rd-party version manager's config file.
  # Accepts "nodenv" (.node-version), "nvm" (.nvmrc), or none.
  # syncVersionManagerConfig: 'nvm'
